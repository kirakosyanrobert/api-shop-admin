datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../generated/typegraphql-prisma"
}
 
enum Role {
  USER
  ADMIN 
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  name      String
  role      Role     @default(USER)
  image     String  
  password  String   
  addresses Address[] 
  contacts  Contact[] 
  card      Card[]    
}

model Address {
  id        String    @id @default(uuid())
  type      String
  title     String
  location  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Contact {
  id          String    @id @default(uuid())
  type        String
  number      String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Card {
  id              String    @id @default(uuid())
  type            String
  title           String
  cardType        String
  lastFourDigit   Int
  user            User     @relation(fields: [userId], references: [id])
  userId          String
}



model Meta {
  id              String    @id @default(uuid())
  publisher       String    
  isbn            String
  edition         String
  country         String
  languages       String[]
  numberOfReader  String
  numberOfPage    String
  samplePDF       String
  product         Product    @relation(fields: [productId], references: [id])
  productId       String
}

model Social {
  id              String    @id @default(uuid())
  media           String    
  profileLink     String
  author          Author     @relation(fields: [authorId], references: [id])
  authorId        String
}

model Author {
  id              String    @id @default(uuid())
  name            String
  avatar          String
  bio             String
  email           String
  website         String
  socials         Social[]
  product         Product    @relation(fields: [productId], references: [id])
  productId       String
}

model Gallery {
  id         String       @id @default(uuid())
  url        String    
  product    Product    @relation(fields: [productId], references: [id])
  productId  String
}

model Category {
  id               String     @id @default(uuid())
  title            String   
  type             String
  icon             String? 
  slug             String
  itemCount        Int?
  product          Product    @relation(fields: [productId], references: [id])
  productId        String
}

model Product {
  id                  String    @id @default(uuid())
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  slug                String
  title               String    
  description         String
  unit                String    
  image               String
  price               Int   
  salePrice           Int
  discountInPercent   Int
  per_unit            Int
  quantity            Int
  views               Int?
  sales               Int?
  type                ProductType
  author              Author?
  meta                Meta?
  gallery             Gallery[]
  categories          Category[] 
}

enum ProductType {
  BOOK 
  BAGS
  GROCERY
  MEDICINE
  CLOTH
  CLOTHING
  FURNITURE
  FURNITURE_TWO
  MAKEUP
  BAKERY
}




